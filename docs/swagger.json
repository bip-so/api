{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Bip Backend Platform server.",
        "title": "Bip Backend Platform",
        "termsOfService": "https://bip.so/terms-of-service/",
        "contact": {
            "name": "API Support",
            "url": "https://bip.so",
            "email": "santhosh@bip.so"
        },
        "license": {
            "name": "Apache 2.0"
        }
    },
    "paths": {
        "/v1/auth/change-password": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Change password for Loggedin User",
                "parameters": [
                    {
                        "description": "Change Password",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.changePasswordData"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/auth/existing-email": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Check if user exists with this email or not",
                "parameters": [
                    {
                        "description": "Exisitng Emails Checker Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.expectedExistingEmailBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/existing-username": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Check if user exists with this username or not",
                "parameters": [
                    {
                        "description": "Exisitng Username Checker Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.expectedExistingUsernameBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/forgot-password": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "user has forgotton the password, we need an email",
                "parameters": [
                    {
                        "description": "Reset Password",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.forgotPasswordData"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/auth/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Legacy Login User",
                "parameters": [
                    {
                        "description": "Login User Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.expectedLoginPostData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/logout": {
            "post": {
                "description": "Future we'll integrate with Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "This will logout a given user token.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/otp": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Generate OTP for a USER",
                "parameters": [
                    {
                        "description": "New OTP Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.PostNewOtpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.ResponseNewOtp"
                        }
                    }
                }
            }
        },
        "/v1/auth/refresh-token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh Tokens",
                "parameters": [
                    {
                        "description": "Refresh Token Post",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.expectedRefreshTokenPostData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.TokenDetails"
                        }
                    }
                }
            }
        },
        "/v1/auth/reset-password": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Reset Password",
                "parameters": [
                    {
                        "description": "Reset Password",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.ResetPasswordData"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/auth/signup": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Registers a new user with Email and Password",
                "parameters": [
                    {
                        "description": "Legacy user Signup",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.expectedLegacySignupPostData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/social-login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Social Login V1",
                "parameters": [
                    {
                        "description": "Auth Login",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.SocialAuthPost"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/block-thread-comment/": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "BlockThreadComment"
                ],
                "summary": "Create Block Thread Comment",
                "parameters": [
                    {
                        "description": "Create BlockThreadComment",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/blockThreadCommentcomment.PostBlockThreadComment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "BlockThreadComment"
                ],
                "summary": "Update Block Thread Comment",
                "parameters": [
                    {
                        "description": "Create BlockThreadComment",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/blockThreadCommentcomment.PatchBlockThreadComment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/block-thread-comment/reply/{blockThreadID}/{parentCommentID}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "BlockThreadComment"
                ],
                "summary": "Get Block Thread Comment Replies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Block Thread Comment ID",
                        "name": "blockThreadID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Parent Comment ID",
                        "name": "parentCommentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/block-thread-comment/{blockThreadCommentID}": {
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "BlockThreadComment"
                ],
                "summary": "Delete Block Thread Comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Block Thread Comment ID",
                        "name": "blockThreadCommentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/block-thread-comment/{blockThreadID}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "BlockThreadComment"
                ],
                "summary": "Get Block Thread Comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Block Thread Comment ID",
                        "name": "blockThreadID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/block-thread/": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "BlockThread"
                ],
                "summary": "Create Block Thread",
                "parameters": [
                    {
                        "description": "Create BlockThread",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/blockthread.PostBlockThread"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "BlockThread"
                ],
                "summary": "Update Block Thread",
                "parameters": [
                    {
                        "description": "Create BlockThread",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/blockthread.PatchBlockThread"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/block-thread/:blockThreadID/resolve": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "BlockThread"
                ],
                "summary": "Resolve a Block Thread",
                "parameters": [
                    {
                        "description": "Resolve BlockThread",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/blockthread.EmptyBlockThread"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/block-thread/branch/{canvasBranchID}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "BlockThread"
                ],
                "summary": "Get Block Threads By BranchID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Canvas Branch Id",
                        "name": "canvasBranchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "resolved",
                        "name": "resolved",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/block-thread/{blockThreadID}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "BlockThread"
                ],
                "summary": "Get Block Thread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Block Thread Id",
                        "name": "blockThreadID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "BlockThread"
                ],
                "summary": "Delete Block Thread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Block Thread Id",
                        "name": "blockThreadID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/bootstrap/get": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bootstrap"
                ],
                "summary": "Gets all data required",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user Id",
                        "name": "userId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/bootstrap/handle": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bootstrap"
                ],
                "summary": "This API gets a \"string\" and then will return Studio or User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/canvas-branch/:canvasBranchID/access-request/:accessRequestID/manage": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Create a new access request",
                "parameters": [
                    {
                        "description": "Manage AR Req",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ar.ManageAccessRequestPost"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/:canvasBranchID/access-request/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Create a new access request",
                "parameters": [
                    {
                        "description": "New AR Req",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/queries.CreateAccessRequestPost"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/:canvasBranchID/access-request/list": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "get all access requests by studio",
                "responses": {}
            }
        },
        "/v1/canvas-branch/:canvasBranchID/publish-request/:publishRequestID/delete": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "API is used by SAME person to delete the PR",
                "responses": {}
            }
        },
        "/v1/canvas-branch/attributions/{canvasBranchID}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Get CanvasBranch All Attributions",
                "responses": {}
            }
        },
        "/v1/canvas-branch/branch-ops/:canvasBranchID/create-access-token": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Create a Branch Token with Access",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bat.CreateAccessTokenPost"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/branch-ops/:canvasBranchID/invite-via-emails": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "InviteViaEmail: Invite People to Canvas who may or may not have accounts",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bat.CreateEmailInvite"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/branch-ops/delete-token/{code}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Delete a Branch Acceess Token By Key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/branch-ops/drafts": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Get Branches which are Rough and Unpublished by Studio",
                "responses": {}
            }
        },
        "/v1/canvas-branch/branch-ops/get-access-token-detail/:code": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Get Details of a short code, by invite code.",
                "responses": {}
            }
        },
        "/v1/canvas-branch/branch-ops/nav/:canvasBranchID/node": {
            "get": {
                "description": "Given a BranchID we will Children of a Given Node",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Get Children of a Given Branch",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasbranch.GetCanvasBranches"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/branch-ops/nav/:canvasBranchID/root": {
            "get": {
                "description": "Given a BranchID we will return Collection -\u003e Repos -\u003e BranchID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Get Root of a Given Branch",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasbranch.GetCanvasBranches"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/branch-ops/nav/get-branches": {
            "post": {
                "description": "You can call this api to Get ALL the branches on a given canvas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Get branches of a block.",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasbranch.GetCanvasBranches"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/branch-ops/nav/search": {
            "post": {
                "description": "Search by query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Search Repos and Branches.",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasbranch.SearchBranchRepos"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/branch-ops/{canvasBranchID}/history": {
            "get": {
                "description": "Get history of commits of the Main branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Get history of commits of the Main branch",
                "responses": {}
            }
        },
        "/v1/canvas-branch/branch-ops/{canvasBranchID}/join/{code}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Join user with a given branch Token with Access",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bat.PlaceHolder"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/branch-ops/{canvasBranchID}/rough-branch": {
            "post": {
                "description": "When you call call this API it will create a copy of all the blocks\nThis is a rough branch but is only for a Logged in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Create a rough branch for this user.",
                "parameters": [
                    {
                        "description": "Bulk",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasbranch.NewDraftBranchPost"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/branch-ops/{canvasBranchID}/visibility": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Update Branch Visibility",
                "parameters": [
                    {
                        "description": "Update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasbranch.CanvasBranchVisibilityPost"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/create": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Create a new canvasBranch for the canvasRepo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create Canvas Repo",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasbranch.newCanvasBranchPost"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/repo/{canvasBranchID}": {
            "get": {
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Get branch metadata with repo and MR if present.",
                "responses": {}
            }
        },
        "/v1/canvas-branch/{canvasBranchID}": {
            "get": {
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Get branch metadata with MR if present.",
                "responses": {}
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Delete Branch",
                "responses": {}
            }
        },
        "/v1/canvas-branch/{canvasBranchID}/blocks": {
            "get": {
                "description": "You can call this api to Get ALL the blocks on a given branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Get Many Blocks on a Branch",
                "responses": {}
            },
            "post": {
                "description": "You can call this api to update ALL the blocks on a given branch\nThis is an Idempotent endpoint and you need to specfiy the \"scope\" with each block\nIf the scope on a block json is Empty \"\" it will be ignore from the operations.\nAllowed Scope: \"create\" - New Block, \"update\" - Update Block, \"delete\" - Delete Block (Softdeleteonly)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Bulk Create / Update",
                "parameters": [
                    {
                        "description": "Bulk",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasbranch.CanvasBlockPost"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/{canvasBranchID}/blocks/associations": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "parameters": [
                    {
                        "description": "Bulk",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasbranch.CanvasBlockAssociationPost"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/{canvasBranchID}/blocks/{commitID}/blocks-history": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Get blocks from git history by commit id",
                "responses": {}
            }
        },
        "/v1/canvas-branch/{canvasBranchID}/diffblocks": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "API will returns Merge Request reponse before merge request is created.",
                "responses": {}
            }
        },
        "/v1/canvas-branch/{canvasBranchID}/invited": {
            "get": {
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Get Emails which were invited on a Branch",
                "responses": {}
            }
        },
        "/v1/canvas-branch/{canvasBranchID}/last-updated": {
            "get": {
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Get branch lastupdated at.",
                "responses": {}
            }
        },
        "/v1/canvas-branch/{canvasBranchID}/merge-request/:mergeRequestID/delete": {
            "post": {
                "description": "This is based on persons permissions.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Delete a Merge Request usually used by Person to delete Their own Request.",
                "parameters": [
                    {
                        "description": "Delete",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasbranch.EmptyPost"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/{canvasBranchID}/merge-request/:mergeRequestID/merge-accept": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Accept / Partially Accept a Merge request, Requires CANVAS_BRANCH_MANAGE_MERGE_REQUESTS",
                "parameters": [
                    {
                        "description": "Accept/Partial Accept",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasbranch.MergeRequestAcceptPartialPost"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/{canvasBranchID}/merge-request/:mergeRequestID/reject": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Use this endpoint to Reject a MergeRequest needs to have CANVAS_BRANCH_MANAGE_MERGE_REQUESTS",
                "responses": {}
            }
        },
        "/v1/canvas-branch/{canvasBranchID}/merge-request/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Create a Merge Request, reequires 'CANVAS_BRANCH_CREATE_MERGE_REQUEST'",
                "parameters": [
                    {
                        "description": "Cancel",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasbranch.MergeRequestCreatePost"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/{canvasBranchID}/merge-request/list": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Get All the Merge Requests on this branch",
                "responses": {}
            }
        },
        "/v1/canvas-branch/{canvasBranchID}/merge-request/{mergeRequestID}/response": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "API will returns (Merge Request Object, Branch Object, Blocks on Rough Branch, Blocks on Parent Branch",
                "responses": {}
            }
        },
        "/v1/canvas-branch/{canvasBranchID}/publish-request/:publishRequestID/manage": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Accept and Reject a Publish Request (Check Perms)",
                "parameters": [
                    {
                        "description": "Publish Req",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasbranch.ManagePublishRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/{canvasBranchID}/publish-request/init": {
            "post": {
                "description": "This will eitehr create a PR or Directy you can check the `\"published\": false,` in the json response\nif the publish was done or a request was created",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Publish a branch or Request a publish request (based on your permissions)",
                "parameters": [
                    {
                        "description": "Publish",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasbranch.InitPRPost"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-branch/{canvasBranchID}/publish-request/list": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasBranch"
                ],
                "summary": "Get All the Publish Requests on a Branch",
                "responses": {}
            }
        },
        "/v1/canvas-repo/": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasRepo"
                ],
                "summary": "Get One Canvas using Key",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/canvas-repo/create": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "CanvasRepo"
                ],
                "summary": "Create Canvas Repo with a Default Branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create Canvas Repo",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasrepo.NewCanvasRepoPost"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-repo/create-language": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasRepo"
                ],
                "summary": "Create Language Canvas Repo",
                "parameters": [
                    {
                        "description": "create language data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasrepo.CreateLanguageValidator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/canvas-repo/distinct-languages": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasRepo"
                ],
                "summary": "Get distinct languages of all repos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/canvas-repo/get": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasRepo"
                ],
                "summary": "Get all Canvas Related to collection",
                "parameters": [
                    {
                        "description": "Get all Canvas",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasrepo.GetAllCanvasValidator"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/canvas-repo/init": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "CanvasRepo"
                ],
                "summary": "Init Canvas Repo with a Fresh Branch",
                "parameters": [
                    {
                        "description": "Init Canvas Repo",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasrepo.InitCanvasRepoPost"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvas-repo/move": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasRepo"
                ],
                "summary": "Move Canvas Position",
                "parameters": [
                    {
                        "description": "Move Canvas",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasrepo.MoveCanvasRepoPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/canvas-repo/next-prev/{canvasRepoId}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasRepo"
                ],
                "summary": "Get next and prev canvas of that canvas",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "canvas Repo Id",
                        "name": "canvasRepoId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/canvas-repo/role/{roleId}": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasRepo"
                ],
                "summary": "Get role Canvas Related to collection",
                "parameters": [
                    {
                        "description": "Get all Canvas",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasrepo.GetAllCanvasValidator"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Role Id",
                        "name": "roleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/canvas-repo/search/role/{roleId}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasRepo"
                ],
                "summary": "Search Canvas Repos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Role Id",
                        "name": "roleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/canvas-repo/search/user/{userId}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasRepo"
                ],
                "summary": "Search Canvas Repos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/canvas-repo/user/{userId}": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CanvasRepo"
                ],
                "summary": "Get member Canvas Related to collection",
                "parameters": [
                    {
                        "description": "Get all Canvas",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasrepo.GetAllCanvasValidator"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/canvas-repo/{canvasRepoID}": {
            "delete": {
                "tags": [
                    "CanvasRepo"
                ],
                "summary": "Delete Canvas Repo",
                "responses": {}
            },
            "patch": {
                "tags": [
                    "CanvasRepo"
                ],
                "summary": "Update Canvas - Note this only updates Name or Icon for a Repo use Move API for positiion",
                "parameters": [
                    {
                        "description": "UpdateCanvas Repo",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasrepo.UpdateCanvasRepoPost"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/canvasbranchpermission/bulk-update": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "CanvasBranch Permissions"
                ],
                "summary": "Create Bulk New canvas branch permission",
                "parameters": [
                    {
                        "description": "Create bulk Canvas Branch permission",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/canvasbranchpermissions.NewCanvasBranchPermissionCreatePost"
                            }
                        }
                    },
                    {
                        "type": "string",
                        "description": "inherit permissions",
                        "name": "inherit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/canvasbranchpermission/inherit/{canvasBranchId}": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "CanvasBranch Permissions"
                ],
                "summary": "Inherits the parent permissions.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Canvas Branch Id",
                        "name": "canvasBranchId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/canvasbranchpermission/update": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "CanvasBranch Permissions"
                ],
                "summary": "Create New canvas branch permission",
                "parameters": [
                    {
                        "description": "Create Canvas Branch permission",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/canvasbranchpermissions.NewCanvasBranchPermissionCreatePost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/canvasbranchpermission/{canvasBranchId}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "CanvasBranch Permissions"
                ],
                "summary": "Get canvas branch permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Canvas Branch Id",
                        "name": "canvasBranchId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/canvasbranchpermission/{canvasBranchPermissionId}": {
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "CanvasBranch Permissions"
                ],
                "summary": "Hard delete canvas branch permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Canvas Branch ID",
                        "name": "canvasBranchPermissionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/collection/create": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "summary": "Create Collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create Collection",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/collection.CollectionCreateValidator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/collection/delete/{collectionId}": {
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "summary": "Delete Collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection Id",
                        "name": "collectionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/collection/get": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "summary": "Get all Collections related to studioID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/collection/move": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "summary": "Move Collection Position",
                "parameters": [
                    {
                        "description": "Move Collection",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/collection.CollectionMoveValidator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/collection/next-prev/{collectionId}": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "summary": "Get next and prev collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "collectionId",
                        "name": "collectionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/collection/role/{roleId}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "summary": "Get all Collections to display in role permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Role Id",
                        "name": "roleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/collection/update": {
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "summary": "Update Collection",
                "parameters": [
                    {
                        "description": "Update Collection",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/collection.CollectionUpdateValidator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/collection/user/{userId}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "summary": "Get all Collections to display in member permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User Id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/collection/{collectionId}/visibility": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "summary": "Update Collection Visibility - \"private\", \"view\", \"comment\", \"edit\"",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection Id",
                        "name": "collectionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "inherit visibilty",
                        "name": "inherit",
                        "in": "query"
                    },
                    {
                        "description": "Update Collection",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/collection.VisibilityUpdateValidator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/collectionpermission/update": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection Permission"
                ],
                "summary": "Create/Update collection permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "collection permission data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/collectionpermissions.CollectionPermissionValidator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/collectionpermission/{collectionPermissionId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection Permission"
                ],
                "summary": "Delete collection permissions by collection id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "collectionId Id",
                        "name": "collectionPermissionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/collectionpermission/{collectionid}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection Permission"
                ],
                "summary": "Gets collection permissions by collection id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection Id",
                        "name": "collectionid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/follow/studio/follow": {
            "post": {
                "tags": [
                    "Followings"
                ],
                "summary": "Follow a Studio",
                "parameters": [
                    {
                        "description": "Follow studio",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/follow.PostFollowStudioRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/follow/studio/follower": {
            "get": {
                "tags": [
                    "Followings"
                ],
                "summary": "Followers Count for Studio",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/follow.FollowUserStudioCountResponse"
                        }
                    }
                }
            }
        },
        "/v1/follow/studio/unfollow": {
            "post": {
                "tags": [
                    "Followings"
                ],
                "summary": "Unfollow a Studio",
                "parameters": [
                    {
                        "description": "unFollow User",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/follow.PostUnFollowStudioRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/follow/user/follow": {
            "post": {
                "tags": [
                    "Followings"
                ],
                "summary": "Follow a User",
                "parameters": [
                    {
                        "description": "Follow User",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/follow.PostFollowUserRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/follow/user/follow-count": {
            "get": {
                "tags": [
                    "Followings"
                ],
                "summary": "Followers Count for loggedin user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/follow.FollowUserFollowCountResponse"
                        }
                    }
                }
            }
        },
        "/v1/follow/user/list": {
            "get": {
                "tags": [
                    "Followings"
                ],
                "summary": "Get user followers or following a Studio",
                "responses": {}
            }
        },
        "/v1/follow/user/unfollow": {
            "post": {
                "tags": [
                    "Followings"
                ],
                "summary": "Unfollow a User",
                "parameters": [
                    {
                        "description": "unFollow User",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/follow.PostUnFollowUserRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/global/check-handle": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Global"
                ],
                "summary": "Check user/studio username/handle available",
                "parameters": [
                    {
                        "type": "string",
                        "description": "handle to check",
                        "name": "handle",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/global/search": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Global"
                ],
                "summary": "Search Studios \u0026 Users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "next page",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "query to search",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "type of objects: studios/users/pages/reels, empty for all",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/global/upload-file": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Global"
                ],
                "summary": "Global generic upload image API",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Model Name",
                        "name": "model",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Model uuid",
                        "name": "uuid",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/integrations": {
            "delete": {
                "description": "Delete integration from studio",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StudioIntegrations"
                ],
                "summary": "Delete Integration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "integration type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v1/integrations/discord": {
            "put": {
                "description": "Update discord dm notifications status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StudioIntegrations"
                ],
                "summary": "Update discord dm notifications",
                "parameters": [
                    {
                        "description": "Update discord dm notifications",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/studio_integration.UpdateDiscordNotification"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/integrations/discord/update": {
            "get": {
                "description": "Check if studio needs to the integration done again.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StudioIntegrations"
                ],
                "summary": "Get Integrations Settings",
                "responses": {}
            }
        },
        "/v1/integrations/settings": {
            "get": {
                "description": "Get discord, slack, dm integration page settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StudioIntegrations"
                ],
                "summary": "Get Integrations Settings",
                "responses": {}
            }
        },
        "/v1/integrations/slack": {
            "put": {
                "description": "Update slack dm notifications status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StudioIntegrations"
                ],
                "summary": "Update slack dm notifications",
                "parameters": [
                    {
                        "description": "Update slack dm notifications",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/studio_integration.UpdateSlackNotification"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/member/canvas-branch/{canvasBranchID}": {
            "get": {
                "description": "we can get all members or roles having access to canvas branch",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Member"
                ],
                "summary": "All members or roles having access to canvas branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Canvas Branch Id",
                        "name": "canvasBranchID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v1/member/leave-studio/{studioId}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Member"
                ],
                "summary": "Leave Studio",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "studioId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/member/role/{roleID}": {
            "get": {
                "description": "we can get all members of a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Member"
                ],
                "summary": "All role members",
                "parameters": [
                    {
                        "type": "string",
                        "description": "roleID Id",
                        "name": "roleID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v1/member/role/{roleID}/search-members": {
            "get": {
                "description": "we can search for all members of a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Member"
                ],
                "summary": "All role members by search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "roleID Id",
                        "name": "roleID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v1/member/search": {
            "get": {
                "description": "we get all members of a studio",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Member"
                ],
                "summary": "All studio members",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search string",
                        "name": "search",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v1/mentions/": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Requires a scope: scope can be \"block\",\"block_comment\",\"reel\",\"reel_comment\", \"block_thread\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Mentions"
                ],
                "summary": "Create a Mention",
                "parameters": [
                    {
                        "description": "Create Mention",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/mentions.MentionPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/message/get": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Gets Dicord Messages captured from bipmark for the user",
                "tags": [
                    "Messages"
                ],
                "summary": "Get Messages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "next page",
                        "name": "skip",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/message/{messageID}": {
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Deletes Discord Message captured from bipmark for the user",
                "tags": [
                    "Messages"
                ],
                "summary": "Delete Message",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/notifications/": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Get Notifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type Eg. all, studio, personal",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/notifications/count": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "All Notifications Count of user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/notifications/mark-as-seen": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark as read",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/parser/import-file": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parser"
                ],
                "summary": "Import single file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/parser/import-notion": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parser"
                ],
                "summary": "Import notion files via zip",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Zip file file",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/parser/markdown/{canvasBranchID}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parser"
                ],
                "summary": "Get markdown file of the canvas Branch",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Canvas Branch Id",
                        "name": "canvasBranchID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/permission/canvas/{collectionId}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Gets User canvas Permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio ID",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "collection Id",
                        "name": "collectionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v1/permission/canvas/{collectionId}/{parentCanvasId}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Gets User canvas Permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio ID",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "collectionId Id",
                        "name": "collectionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "collectionId Id",
                        "name": "parentCanvasId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v1/permission/collection": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Gets User Studio Collection Permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/permission/flush-cache": {
            "get": {
                "tags": [
                    "RedisAPI"
                ],
                "summary": "Redis Flush API",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/permission/invalidate-cache": {
            "get": {
                "tags": [
                    "RedisAPI"
                ],
                "summary": "Redis Invalidate cache API",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hash key or Direct redis key",
                        "name": "hash",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Key",
                        "name": "key",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/permission/studio": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Gets User Studio Permissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/permissions-schema/canvasBranch/schema": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PermissionGroup"
                ],
                "summary": "Get Canvas Permissions Schema",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/permissiongroup.PermissionsSchemaResponse"
                        }
                    }
                }
            }
        },
        "/v1/permissions-schema/collection/schema": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PermissionGroup"
                ],
                "summary": "Get Collections Permissions Schema",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/permissiongroup.PermissionsSchemaResponse"
                        }
                    }
                }
            }
        },
        "/v1/permissions-schema/studio/schema": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PermissionGroup"
                ],
                "summary": "Get Studio Permissions Schema",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/permissiongroup.PermissionsSchemaResponse"
                        }
                    }
                }
            }
        },
        "/v1/posts/": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get All Posts for this Studio",
                "responses": {}
            }
        },
        "/v1/posts/:postID": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get Single Post",
                "responses": {}
            },
            "delete": {
                "tags": [
                    "Post"
                ],
                "summary": "Delete Single Post",
                "responses": {}
            }
        },
        "/v1/posts/:postID/add-reaction": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "New Post Reaction",
                "parameters": [
                    {
                        "description": "New post reaction",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/post.NewPostReaction"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/posts/:postID/comments": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get All Comments on a POST",
                "responses": {}
            }
        },
        "/v1/posts/:postID/comments/:postCommentID": {
            "delete": {
                "tags": [
                    "Post"
                ],
                "summary": "Delete a comment on a POST",
                "responses": {}
            }
        },
        "/v1/posts/:postID/comments/:postCommentID/add-reaction": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "New Post Comment Reaction",
                "parameters": [
                    {
                        "description": "New post comment reaction",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/post.NewPostCommentReaction"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/posts/:postID/comments/:postCommentID/edit": {
            "patch": {
                "tags": [
                    "Post"
                ],
                "summary": "Patch a single comment",
                "parameters": [
                    {
                        "description": "Update Post Comment",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/post.UpdatePostCommentValidation"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/posts/:postID/comments/:postCommentID/remove-reaction": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "New Post Comment Reaction",
                "parameters": [
                    {
                        "description": "Remove post comment reaction",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/post.RemovePostCommentReaction"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/posts/:postID/comments/create": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Creates a new POST",
                "parameters": [
                    {
                        "description": "Create Studio Post Comment",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/post.CreatePostCommentValidation"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/posts/:postID/edit": {
            "patch": {
                "tags": [
                    "Post"
                ],
                "summary": "Patch a single post",
                "parameters": [
                    {
                        "description": "Update Studio Post",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/post.UpdatePostThread"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/posts/:postID/remove-reaction": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "New Post Reaction",
                "parameters": [
                    {
                        "description": "New post reaction",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/post.RemovePostReaction"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/posts/create": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Post"
                ],
                "summary": "Creates a new POST",
                "parameters": [
                    {
                        "description": "Create Studio Post",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/post.NewPostThread"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/posts/homepage": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get All Posts for this Studio",
                "responses": {}
            }
        },
        "/v1/publish-requests/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PublishRequest"
                ],
                "summary": "Get All the Publish Requests on a Studio",
                "responses": {}
            }
        },
        "/v1/reactions/create": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "This API will let you create a reaction on following\nmodels Blocks, Block Thread, Block Comment, Reel, Reel Comment\nRequires a scope: scope can be \"block\",\"block_comment\",\"reel\",\"reel_comment\", \"block_thread\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reactions"
                ],
                "summary": "Create Mention",
                "parameters": [
                    {
                        "description": "Create Mention",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reactions.CreateMentionPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/reactions/remove": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "This API will let you remove a reaction on following\nmodels Blocks, Block Thread, Block Comment, Reel, Reel Comment\nRequires a scope: scope can be \"block\",\"block_comment\",\"reel\",\"reel_comment\", \"block_thread\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reactions"
                ],
                "summary": "Removes a Reaction",
                "parameters": [
                    {
                        "description": "Remove Reaction",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reactions.CreateMentionPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/reels/": {
            "get": {
                "description": "You can call this api to Get ALL the reels for your studio\n:  {{ .BasePath }}/v1/reels/ - All reels for that studio\n:  {{ .BasePath }}/v1/reels/?canvasBranchID=256 - All reels for canvasBranchID=256\n:  {{ .BasePath }}/v1/reels/?blockUUID=e92942a8-de88-43e6-ba20-fb2c634129b0 - All reels for blockUUID=\u003c\u003e",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reels"
                ],
                "summary": "Get All Reels for your Studio - Also supports ?canvasBranchID=45 QP",
                "responses": {}
            },
            "post": {
                "description": "Create reeel for your studio",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reels"
                ],
                "summary": "Create a reel",
                "parameters": [
                    {
                        "description": "Create Reel",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reel.NewReelCreatePOST"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/reels/:reelID": {
            "get": {
                "description": "You can call this api to Get One Reel By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reels"
                ],
                "summary": "Get Single Reel",
                "responses": {}
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reels"
                ],
                "summary": "Delete a reel",
                "responses": {}
            }
        },
        "/v1/reels/:reelID/comments/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reels"
                ],
                "summary": "Get All Comments on a Reels for your Studio",
                "parameters": [
                    {
                        "type": "string",
                        "description": "parent comment id",
                        "name": "parentId",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "description": "create a new comment on a Reel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reels"
                ],
                "summary": "Add comment on a Reel",
                "parameters": [
                    {
                        "description": "Create Comment on Reel",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reel.ReelCommentCreatePOST"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/reels/feed": {
            "get": {
                "description": "This API is specific to the user. This will return all the reels which user have access in the system.\nTo get studio specific reels =\u003e ?filter=studio and studio id as bip-studio-id in header",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reels"
                ],
                "summary": "Get Reels feed from getStream. This is a paginated API",
                "responses": {}
            }
        },
        "/v1/reels/popular": {
            "get": {
                "description": "It sends all REELS for now",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reels"
                ],
                "summary": "Get Popular Reels (POV User)",
                "responses": {}
            }
        },
        "/v1/reels/{reelID}/comments/{reelCommentID}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reels"
                ],
                "summary": "Delete a reel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reel Id",
                        "name": "reelID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "reelCommentID",
                        "name": "reelCommentID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "resolved",
                        "name": "resolved",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v1/role/:roleId": {
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Delete role for a studio",
                "responses": {}
            }
        },
        "/v1/role/create": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Create role for a studio",
                "parameters": [
                    {
                        "description": "Create Role",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.CreateRolePost"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/role/edit": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Edit role for a studio",
                "parameters": [
                    {
                        "description": "Edit Role",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.UpdateRolePost"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/role/member/{memberId}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get Member roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Member Id",
                        "name": "memberId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v1/role/membership": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Update Role Membership",
                "parameters": [
                    {
                        "description": "Update Members In Role",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.UpdateManagementPost"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/slack/connect": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "slack"
                ],
                "summary": "Connect studio to slack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "userId",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "userId",
                        "name": "studioId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/:studioid": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "Gets a studio by id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "Deletes a studio by id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/admins": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "Get Studio Admins",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v1/studio/ban": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "parameters": [
                    {
                        "description": "Ban User",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/studio.BanUserValidator"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/create": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "Creates a new studio for the user",
                "parameters": [
                    {
                        "description": "Create Studio Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/studio.CreateStudioValidator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/edit": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "Edit a studio",
                "parameters": [
                    {
                        "description": "Update Studio Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/studio.UpdateStudioValidator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/external-integration/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "Get Studio Vendor",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "Register New Integration",
                "parameters": [
                    {
                        "description": "Register New Studio Integration Validator",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/studio.RegisterNewStudioIntegrationValidator"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Vendor Id",
                        "name": "Bip-Partner-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/external-integration/ping": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "Get Studio Vendor",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/external-integration/user-points": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "Get Studio User Points",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vendor Id",
                        "name": "Bip-Partner-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "guildId",
                        "name": "guildId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/image": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "Upload \u0026 Update a studio image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/invite-via-email": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "Invite many users via emails flow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Invite Users in Bulk",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/studio.NewInvitePostOne"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/join/bulk": {
            "post": {
                "description": "for all users, If user had already left, he can rejoin, else if he was banned then it throws error, otherwise it will join",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "add users in bulk to the studio",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Join users in bulk",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/studio.JoinStudioBulkPost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/memberCount": {
            "post": {
                "description": "counts all members which belong to the studio excluding those who have left or banned",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/members": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "Gets members by studioId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "next page",
                        "name": "skip",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/popular": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "Gets popular studios",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/roles": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "Gets roles by studio Id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/toggle-membership": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "Toggle studio Membership",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/{studioId}/customer-portal-session": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "Get Payment Link",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "studioId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/{studioId}/join": {
            "post": {
                "description": "If user had already left, he can rejoin, else if he was banned then it throws error, otherwise it will join",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "adding user to a studio",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "studioId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/{studioId}/membership-request/:membershipRequestID/accept": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "studioId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/{studioId}/membership-request/:membershipRequestID/reject": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "studioId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New Request Object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/studio.StudioMembershipRequestReject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/{studioId}/membership-request/list": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "studioId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/{studioId}/membership-request/new": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "studioId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New Request Object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/studio.StudioMembershipRequestNew"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studio/{studioId}/stats": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio"
                ],
                "summary": "Get Studio Stats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "studioId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studiopermission/:studioPermissionID": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio Permission"
                ],
                "summary": "deletes studio permissions by studio id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studiopermission/getAll": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio Permission"
                ],
                "summary": "Gets studio permissions by studio id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/studiopermission/update": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Studio Permission"
                ],
                "summary": "Create/Update studio permissions",
                "parameters": [
                    {
                        "description": "Update permissions Data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/studiopermissions.CreateStudioPermissionsPost"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Studio Id",
                        "name": "bip-studio-id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/twitter/metadata/{id}": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "tags": [
                    "Twitter"
                ],
                "summary": "Get Twitter tweet Metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tweet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/user/contacts": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Contacts"
                ],
                "summary": "Get User contacts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Since",
                        "name": "since",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Contacts"
                ],
                "summary": "Create User contacts",
                "parameters": [
                    {
                        "description": "Create User Contacts",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/user/followers-list": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get Users Followers and Following List (Send the ?userId=0 to the get)",
                "responses": {}
            }
        },
        "/v1/user/following-list": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get Users Following (Send the ?userId=0 to the get)",
                "responses": {}
            }
        },
        "/v1/user/info": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/user/popular": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Gets popular users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "next page",
                        "name": "skip",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/user/settings": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Settings"
                ],
                "summary": "Get User settings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Settings"
                ],
                "summary": "Update User settings",
                "parameters": [
                    {
                        "description": "Update User Settings",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.PatchUserSettingsValidator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/user/setup": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Setup User",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Body with image file",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Last Name",
                        "name": "fullName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bio",
                        "name": "bio",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Twitter Url",
                        "name": "twitterUrl",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website",
                        "name": "website",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Location",
                        "name": "location",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        },
        "/v1/user/update": {
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Body with image file",
                        "name": "file",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Full Name",
                        "name": "fullName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bio",
                        "name": "bio",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Twitter Url",
                        "name": "twitterUrl",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Website",
                        "name": "website",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Location",
                        "name": "location",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ApiResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ar.ManageAccessRequestPost": {
            "type": "object",
            "properties": {
                "canvasBranchPermissionGroup": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "auth.PostNewOtpRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "auth.ResetPasswordData": {
            "type": "object",
            "required": [
                "password",
                "token"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.ResponseNewOtp": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                }
            }
        },
        "auth.SocialAuthPost": {
            "type": "object",
            "required": [
                "fullName",
                "image",
                "provider",
                "providerID"
            ],
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "clientReferenceId": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "providerID": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "userViaDiscordAppDirectory": {
                    "type": "boolean"
                }
            }
        },
        "auth.TokenDetails": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accessTokenID": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "refreshTokenID": {
                    "type": "string"
                }
            }
        },
        "auth.changePasswordData": {
            "type": "object",
            "required": [
                "newPassword",
                "oldPassword"
            ],
            "properties": {
                "newPassword": {
                    "type": "string"
                },
                "oldPassword": {
                    "type": "string"
                }
            }
        },
        "auth.expectedExistingEmailBody": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "auth.expectedExistingUsernameBody": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.expectedLegacySignupPostData": {
            "type": "object",
            "properties": {
                "clientReferenceId": {
                    "type": "string"
                },
                "email": {
                    "description": "Username              string `json:\"username\"` // Can be Email or Username",
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.expectedLoginPostData": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "ghostSecret": {
                    "type": "string"
                },
                "ghostToken": {
                    "type": "string"
                },
                "isGhostLogin": {
                    "type": "boolean"
                },
                "otp": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "description": "Can be Email or Username",
                    "type": "string"
                }
            }
        },
        "auth.expectedRefreshTokenPostData": {
            "type": "object",
            "required": [
                "AccessTokenID",
                "refreshToken"
            ],
            "properties": {
                "AccessTokenID": {
                    "type": "string"
                },
                "refreshToken": {
                    "description": "AccessToken   string `json:\"accessToken\"  binding:\"required\"` // Can be Email or Username",
                    "type": "string"
                }
            }
        },
        "auth.forgotPasswordData": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "bat.CreateAccessTokenPost": {
            "type": "object",
            "properties": {
                "permissionGroup": {
                    "type": "string"
                }
            }
        },
        "bat.CreateEmailInvite": {
            "type": "object",
            "properties": {
                "invites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/bat.EmailInvitePerEmail"
                    }
                }
            }
        },
        "bat.EmailInvitePerEmail": {
            "type": "object",
            "properties": {
                "canvasPermissionsGroup": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "bat.PlaceHolder": {
            "type": "object"
        },
        "blockThreadCommentcomment.PatchBlockThreadComment": {
            "type": "object",
            "required": [
                "data",
                "id",
                "isReply",
                "parentId",
                "position",
                "threadId"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "isReply": {
                    "type": "boolean"
                },
                "parentId": {
                    "type": "integer"
                },
                "position": {
                    "type": "integer"
                },
                "threadId": {
                    "type": "integer"
                }
            }
        },
        "blockThreadCommentcomment.PostBlockThreadComment": {
            "type": "object",
            "required": [
                "data",
                "threadId"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "isEdited": {
                    "type": "boolean"
                },
                "isReply": {
                    "type": "boolean"
                },
                "parentId": {
                    "type": "integer"
                },
                "position": {
                    "type": "integer"
                },
                "threadId": {
                    "type": "integer"
                }
            }
        },
        "blockthread.EmptyBlockThread": {
            "type": "object"
        },
        "blockthread.PatchBlockThread": {
            "type": "object",
            "required": [
                "canvasBranchID",
                "canvasRepositoryID",
                "highlightedText",
                "id",
                "position",
                "startBlockID",
                "text",
                "textRangeEnd",
                "textRangeStart"
            ],
            "properties": {
                "canvasBranchID": {
                    "type": "integer"
                },
                "canvasRepositoryID": {
                    "type": "integer"
                },
                "highlightedText": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "position": {
                    "type": "integer"
                },
                "startBlockID": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                },
                "textRangeEnd": {
                    "type": "integer"
                },
                "textRangeStart": {
                    "type": "integer"
                }
            }
        },
        "blockthread.PostBlockThread": {
            "type": "object",
            "required": [
                "canvasBranchId",
                "canvasRepositoryId",
                "position",
                "text"
            ],
            "properties": {
                "canvasBranchId": {
                    "type": "integer"
                },
                "canvasRepositoryId": {
                    "type": "integer"
                },
                "highlightedText": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "startBlockUUID": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "textRangeEnd": {
                    "type": "integer"
                },
                "textRangeStart": {
                    "type": "integer"
                }
            }
        },
        "canvasbranch.CanvasBlockAssociationPost": {
            "type": "object",
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PostBlocks"
                    }
                },
                "permissionContext": {
                    "type": "string"
                }
            }
        },
        "canvasbranch.CanvasBlockPost": {
            "type": "object",
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PostBlocks"
                    }
                }
            }
        },
        "canvasbranch.CanvasBranchVisibilityPost": {
            "type": "object",
            "required": [
                "visibility"
            ],
            "properties": {
                "visibility": {
                    "description": "\"private\" \"view\" \"comment\"  \"edit\"",
                    "type": "string"
                }
            }
        },
        "canvasbranch.EmptyPost": {
            "type": "object"
        },
        "canvasbranch.GetCanvasBranches": {
            "type": "object",
            "properties": {
                "canvasId": {
                    "type": "integer"
                },
                "collectionId": {
                    "type": "integer"
                },
                "parentCanvasId": {
                    "type": "integer"
                }
            }
        },
        "canvasbranch.InitPRPost": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "canvasbranch.ManagePublishRequest": {
            "type": "object",
            "properties": {
                "accept": {
                    "type": "boolean"
                }
            }
        },
        "canvasbranch.MergeRequestAcceptPartialPost": {
            "type": "object",
            "required": [
                "commitMessage"
            ],
            "properties": {
                "changesAccepted": {
                    "type": "object",
                    "additionalProperties": true
                },
                "commitMessage": {
                    "type": "string"
                },
                "status": {
                    "description": "MergeRequestID  uint64                  `json:\"mergeRequestID\"`",
                    "type": "string"
                }
            }
        },
        "canvasbranch.MergeRequestCreatePost": {
            "type": "object",
            "properties": {
                "commitMessage": {
                    "type": "string"
                }
            }
        },
        "canvasbranch.NewDraftBranchPost": {
            "type": "object",
            "properties": {
                "canvasRepoId": {
                    "type": "integer"
                },
                "collectionId": {
                    "type": "integer"
                },
                "parentCanvasRepoId": {
                    "type": "integer"
                }
            }
        },
        "canvasbranch.SearchBranchRepos": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string"
                }
            }
        },
        "canvasbranch.newCanvasBranchPost": {
            "type": "object",
            "required": [
                "canvasRepoId",
                "collectionId"
            ],
            "properties": {
                "canvasRepoId": {
                    "type": "integer"
                },
                "collectionId": {
                    "type": "integer"
                },
                "fromCanvasBranchId": {
                    "type": "integer"
                },
                "parentCanvasRepoId": {
                    "type": "integer"
                }
            }
        },
        "canvasbranchpermissions.NewCanvasBranchPermissionCreatePost": {
            "type": "object",
            "required": [
                "canvasBranchId",
                "canvasRepositoryId",
                "collectionId",
                "permGroup"
            ],
            "properties": {
                "canvasBranchId": {
                    "type": "integer"
                },
                "canvasRepositoryId": {
                    "type": "integer"
                },
                "collectionId": {
                    "type": "integer"
                },
                "isOverridden": {
                    "type": "boolean"
                },
                "memberID": {
                    "type": "integer"
                },
                "parentCanvasRepositoryId": {
                    "type": "integer"
                },
                "permGroup": {
                    "type": "string"
                },
                "roleID": {
                    "type": "integer"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "canvasrepo.CreateLanguageValidator": {
            "type": "object",
            "properties": {
                "autoTranslate": {
                    "type": "boolean"
                },
                "canvasRepositoryID": {
                    "type": "integer"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "canvasrepo.GetAllCanvasValidator": {
            "type": "object",
            "properties": {
                "parentCanvasRepositoryID": {
                    "type": "integer"
                },
                "parentCollectionID": {
                    "type": "integer"
                }
            }
        },
        "canvasrepo.InitCanvasRepoPost": {
            "type": "object",
            "required": [
                "collectionID",
                "name",
                "position"
            ],
            "properties": {
                "collectionID": {
                    "type": "integer"
                },
                "icon": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentCanvasRepositoryID": {
                    "type": "integer"
                },
                "position": {
                    "type": "integer"
                }
            }
        },
        "canvasrepo.MoveCanvasRepoPost": {
            "type": "object",
            "properties": {
                "canvasRepoID": {
                    "type": "integer"
                },
                "futurePosition": {
                    "type": "integer"
                },
                "toCollectionID": {
                    "type": "integer"
                },
                "toParentCanvasRepositoryID": {
                    "type": "integer"
                }
            }
        },
        "canvasrepo.NewCanvasRepoPost": {
            "type": "object",
            "required": [
                "collectionID",
                "name",
                "position"
            ],
            "properties": {
                "collectionID": {
                    "type": "integer"
                },
                "icon": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentCanvasRepositoryID": {
                    "type": "integer"
                },
                "position": {
                    "type": "integer"
                }
            }
        },
        "canvasrepo.UpdateCanvasRepoPost": {
            "type": "object",
            "properties": {
                "coverUrl": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "collection.CollectionCreateValidator": {
            "type": "object",
            "required": [
                "name",
                "position",
                "publicAccess"
            ],
            "properties": {
                "icon": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentCollectionID": {
                    "type": "integer"
                },
                "position": {
                    "type": "integer"
                },
                "publicAccess": {
                    "type": "string"
                }
            }
        },
        "collection.CollectionMoveValidator": {
            "type": "object",
            "required": [
                "collectionId",
                "position"
            ],
            "properties": {
                "collectionId": {
                    "type": "integer"
                },
                "position": {
                    "type": "integer"
                }
            }
        },
        "collection.CollectionUpdateValidator": {
            "type": "object",
            "required": [
                "id",
                "name",
                "publicAccess"
            ],
            "properties": {
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "publicAccess": {
                    "type": "string"
                }
            }
        },
        "collection.VisibilityUpdateValidator": {
            "type": "object",
            "required": [
                "publicAccess"
            ],
            "properties": {
                "publicAccess": {
                    "type": "string"
                }
            }
        },
        "collectionpermissions.CollectionPermissionValidator": {
            "type": "object",
            "required": [
                "collectionId",
                "permGroup"
            ],
            "properties": {
                "collectionId": {
                    "type": "integer"
                },
                "isOverridden": {
                    "type": "boolean",
                    "default": false
                },
                "memberID": {
                    "type": "integer"
                },
                "permGroup": {
                    "type": "string"
                },
                "roleID": {
                    "type": "integer"
                }
            }
        },
        "follow.FollowUserFollowCountResponse": {
            "type": "object",
            "properties": {
                "followers": {
                    "type": "integer"
                },
                "following": {
                    "type": "integer"
                }
            }
        },
        "follow.FollowUserStudioCountResponse": {
            "type": "object",
            "properties": {
                "followers": {
                    "type": "integer"
                }
            }
        },
        "follow.PostFollowStudioRequest": {
            "type": "object",
            "required": [
                "userId"
            ],
            "properties": {
                "userId": {
                    "type": "integer"
                }
            }
        },
        "follow.PostFollowUserRequest": {
            "type": "object",
            "required": [
                "userId"
            ],
            "properties": {
                "userId": {
                    "type": "integer"
                }
            }
        },
        "follow.PostUnFollowStudioRequest": {
            "type": "object",
            "required": [
                "userId"
            ],
            "properties": {
                "userId": {
                    "type": "integer"
                }
            }
        },
        "follow.PostUnFollowUserRequest": {
            "type": "object",
            "required": [
                "userId"
            ],
            "properties": {
                "userId": {
                    "type": "integer"
                }
            }
        },
        "mentions.MentionPost": {
            "type": "object",
            "properties": {
                "branches": {
                    "description": "List of Branches ID's",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "canvasBranchId": {
                    "type": "integer"
                },
                "objectID": {
                    "description": "The id of the Scope",
                    "type": "integer"
                },
                "objectUUID": {
                    "description": "UUID for the block",
                    "type": "string"
                },
                "roles": {
                    "description": "List of Role ID's",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "scope": {
                    "description": "Scope",
                    "type": "string"
                },
                "users": {
                    "description": "List of user ID's",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "models.PostBlocks": {
            "type": "object",
            "properties": {
                "archivedAt": {
                    "type": "string"
                },
                "archivedByID": {
                    "type": "integer"
                },
                "attributes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "children": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "createdByID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "isArchived": {
                    "type": "boolean"
                },
                "rank": {
                    "type": "integer"
                },
                "scope": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedByID": {
                    "type": "integer"
                },
                "uuid": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "permissiongroup.PermissionObject": {
            "type": "object",
            "properties": {
                "key": {
                    "description": "uppercase no space CAN_INVITE",
                    "type": "string"
                },
                "value": {
                    "description": "value can be 0, 1",
                    "type": "integer"
                }
            }
        },
        "permissiongroup.PermissionsSchemaResponse": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "permissionGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/permissiongroup.PermissionsTemplate"
                    }
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "permissiongroup.PermissionsTemplate": {
            "type": "object",
            "properties": {
                "betterPermissions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "displayName": {
                    "type": "string"
                },
                "permissions": {
                    "description": "Has many permisions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/permissiongroup.PermissionObject"
                    }
                },
                "studioID": {
                    "type": "integer"
                },
                "systemName": {
                    "type": "string"
                },
                "type": {
                    "description": "Can be studio/Canvas or /Collections",
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "post.CreatePostCommentValidation": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "isEdited": {
                    "type": "boolean"
                },
                "parentPostCommentID": {
                    "type": "integer"
                }
            }
        },
        "post.NewPostCommentReaction": {
            "type": "object",
            "required": [
                "emoji"
            ],
            "properties": {
                "emoji": {
                    "type": "string"
                }
            }
        },
        "post.NewPostReaction": {
            "type": "object",
            "required": [
                "emoji"
            ],
            "properties": {
                "emoji": {
                    "type": "string"
                }
            }
        },
        "post.NewPostThread": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "children": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "isPublic": {
                    "type": "boolean"
                },
                "roleIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "post.RemovePostCommentReaction": {
            "type": "object",
            "required": [
                "emoji"
            ],
            "properties": {
                "emoji": {
                    "type": "string"
                }
            }
        },
        "post.RemovePostReaction": {
            "type": "object",
            "required": [
                "emoji"
            ],
            "properties": {
                "emoji": {
                    "type": "string"
                }
            }
        },
        "post.UpdatePostCommentValidation": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "isEdited": {
                    "type": "boolean"
                }
            }
        },
        "post.UpdatePostThread": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "children": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "isPublic": {
                    "type": "boolean"
                },
                "roleIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "queries.CreateAccessRequestPost": {
            "type": "object",
            "properties": {
                "canvasBranchID": {
                    "type": "integer"
                },
                "canvasRepositoryID": {
                    "type": "integer"
                },
                "collectionID": {
                    "type": "integer"
                },
                "studioID": {
                    "type": "integer"
                }
            }
        },
        "reactions.CreateMentionPost": {
            "type": "object",
            "required": [
                "canvasBranchID",
                "emoji",
                "scope"
            ],
            "properties": {
                "blockCommentID": {
                    "type": "integer"
                },
                "blockThreadID": {
                    "type": "integer"
                },
                "blockUUID": {
                    "description": "BlockID        uint64 `json:\"blockID\"`",
                    "type": "string"
                },
                "canvasBranchID": {
                    "type": "integer"
                },
                "emoji": {
                    "type": "string"
                },
                "reelCommentID": {
                    "type": "integer"
                },
                "reelID": {
                    "type": "integer"
                },
                "scope": {
                    "description": "\"block\",\"block_comment\",\"reel\",\"reel_comment\",\"block_thread\"",
                    "type": "string"
                }
            }
        },
        "reel.NewReelCreatePOST": {
            "type": "object",
            "properties": {
                "canvasBranchID": {
                    "type": "integer"
                },
                "canvasRepositoryID": {
                    "type": "integer"
                },
                "contextData": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "highlightedText": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rangeEnd": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rangeStart": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "selectedBlocks": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "startBlockUUID": {
                    "type": "string"
                },
                "textRangeEnd": {
                    "type": "integer"
                },
                "textRangeStart": {
                    "type": "integer"
                }
            }
        },
        "reel.ReelCommentCreatePOST": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Comment Base",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "isEdited": {
                    "type": "boolean"
                },
                "isReply": {
                    "type": "boolean"
                },
                "parentId": {
                    "type": "integer"
                }
            }
        },
        "response.ApiResponse": {
            "type": "object"
        },
        "role.CreateRolePost": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "color": {
                    "description": "Color, we'll use #ffffff by default",
                    "type": "string"
                },
                "icon": {
                    "description": "icons for future",
                    "type": "string"
                },
                "name": {
                    "description": "Role Name",
                    "type": "string"
                }
            }
        },
        "role.UpdateManagementPost": {
            "type": "object",
            "properties": {
                "membersAdded": {
                    "description": "array id of MemberIDs/UserIDs to be added",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "membersRemoved": {
                    "description": "array id of MemberIDs/userIDs to be removed",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "roleId": {
                    "type": "integer"
                }
            }
        },
        "role.UpdateRolePost": {
            "type": "object",
            "required": [
                "name",
                "roleId"
            ],
            "properties": {
                "name": {
                    "description": "Role Name",
                    "type": "string"
                },
                "roleId": {
                    "type": "integer"
                }
            }
        },
        "studio.BanUserValidator": {
            "type": "object",
            "properties": {
                "banReason": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "studio.CreateStudioValidator": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "handle": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "studio.JoinStudioBulkPost": {
            "type": "object",
            "properties": {
                "usersAdded": {
                    "description": "array id of UserIDs to be added",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "studio.NewInvitePostOne": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "studio.RegisterNewStudioIntegrationValidator": {
            "type": "object",
            "required": [
                "guildId",
                "guildName"
            ],
            "properties": {
                "guildId": {
                    "type": "string"
                },
                "guildName": {
                    "type": "string"
                }
            }
        },
        "studio.StudioMembershipRequestNew": {
            "type": "object"
        },
        "studio.StudioMembershipRequestReject": {
            "type": "object"
        },
        "studio.UpdateStudioValidator": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "handle": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "studio_integration.UpdateDiscordNotification": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                }
            }
        },
        "studio_integration.UpdateSlackNotification": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                }
            }
        },
        "studiopermissions.CreateStudioPermissionsPost": {
            "type": "object",
            "properties": {
                "isOverriddenFlag": {
                    "type": "boolean",
                    "default": false
                },
                "memberId": {
                    "type": "integer"
                },
                "permsGroup": {
                    "type": "string"
                },
                "roleId": {
                    "type": "integer"
                }
            }
        },
        "user.PatchUserSettingsValidator": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.UpdateUserSettingsValidator"
                    }
                }
            }
        },
        "user.UpdateUserSettingsValidator": {
            "type": "object",
            "required": [
                "allComments",
                "darkMode",
                "followedMe",
                "followedMyStudio",
                "invite",
                "mentions",
                "publishAndMergeRequests",
                "reactions",
                "repliesToMe",
                "responseToMyRequests",
                "systemNotifications",
                "type"
            ],
            "properties": {
                "allComments": {
                    "type": "boolean"
                },
                "darkMode": {
                    "type": "boolean"
                },
                "followedMe": {
                    "type": "boolean"
                },
                "followedMyStudio": {
                    "type": "boolean"
                },
                "invite": {
                    "type": "boolean"
                },
                "mentions": {
                    "type": "boolean"
                },
                "publishAndMergeRequests": {
                    "type": "boolean"
                },
                "reactions": {
                    "type": "boolean"
                },
                "repliesToMe": {
                    "type": "boolean"
                },
                "responseToMyRequests": {
                    "type": "boolean"
                },
                "systemNotifications": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "bearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}